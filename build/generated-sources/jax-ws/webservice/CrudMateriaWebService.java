
package webservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CrudMateriaWebService", targetNamespace = "http://webservicecrud/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CrudMateriaWebService {


    /**
     * 
     * @param descripcion
     * @param codigo
     * @param nombre
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Crear")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Crear", targetNamespace = "http://webservicecrud/", className = "webservice.Crear")
    @ResponseWrapper(localName = "CrearResponse", targetNamespace = "http://webservicecrud/", className = "webservice.CrearResponse")
    @Action(input = "http://webservicecrud/CrudMateriaWebService/CrearRequest", output = "http://webservicecrud/CrudMateriaWebService/CrearResponse")
    public String crear(
        @WebParam(name = "codigo", targetNamespace = "")
        String codigo,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion);

    /**
     * 
     * @param codigo
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Buscar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Buscar", targetNamespace = "http://webservicecrud/", className = "webservice.Buscar")
    @ResponseWrapper(localName = "BuscarResponse", targetNamespace = "http://webservicecrud/", className = "webservice.BuscarResponse")
    @Action(input = "http://webservicecrud/CrudMateriaWebService/BuscarRequest", output = "http://webservicecrud/CrudMateriaWebService/BuscarResponse")
    public String buscar(
        @WebParam(name = "codigo", targetNamespace = "")
        String codigo);

    /**
     * 
     * @param codigo
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Borrar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Borrar", targetNamespace = "http://webservicecrud/", className = "webservice.Borrar")
    @ResponseWrapper(localName = "BorrarResponse", targetNamespace = "http://webservicecrud/", className = "webservice.BorrarResponse")
    @Action(input = "http://webservicecrud/CrudMateriaWebService/BorrarRequest", output = "http://webservicecrud/CrudMateriaWebService/BorrarResponse")
    public String borrar(
        @WebParam(name = "codigo", targetNamespace = "")
        String codigo);

    /**
     * 
     * @param descripcion
     * @param codigo
     * @param nombre
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Actualizar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Actualizar", targetNamespace = "http://webservicecrud/", className = "webservice.Actualizar")
    @ResponseWrapper(localName = "ActualizarResponse", targetNamespace = "http://webservicecrud/", className = "webservice.ActualizarResponse")
    @Action(input = "http://webservicecrud/CrudMateriaWebService/ActualizarRequest", output = "http://webservicecrud/CrudMateriaWebService/ActualizarResponse")
    public String actualizar(
        @WebParam(name = "codigo", targetNamespace = "")
        String codigo,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion);

}
